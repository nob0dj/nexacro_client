<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="comp_fileupload" width="1280" height="720" titletext="New Form">
    <Layouts>
      <Layout height="720" width="1280" stepcount="0">
        <FileUpload id="FileUpload00" taborder="0" left="40" top="70" width="226" height="31" onitemchanged="FileUpload00_onitemchanged" multiselect="true"/>
        <Button id="Button00" taborder="1" text="Upload" left="290" top="71" width="80" height="26" onclick="Button00_onclick"/>
      </Layout>
    </Layouts>
    <Objects>
      <FileUpTransfer id="FileUpTransfer00" onerror="FileUpTransfer00_onerror" onprogress="FileUpTransfer00_onprogress" onsuccess="FileUpTransfer00_onsuccess"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[
this.FileUpload00_onitemchanged = function(obj:nexacro.FileUpload,e:nexacro.FileUploadItemChangeEventInfo)
{
	//FileUpTransfer에 파일 추가
	this.addFileList(obj.filelist);
};

this.Button00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//파일 전송
	this.uploadFiles();

};

/**
* VirtualFile 객체에 차례로 접근
* onsuccess, onerror 이벤트 핸들러 바인딩
* 
* open
*/
this.addFileList = function(filelist)
{	
	//VirtualFile : 로컬시스템의 파일을 읽거나 쓰기위해 사용되는 가상파일 오브젝트	
    for (var i = 0, len = filelist.length, vFile; i < len; i++)
    {
        vFile = filelist[i];
		//onsuccess 이벤트 핸들러 추가
        vFile.addEventHandler("onsuccess", this.FileList_onsuccess, this);
        vFile.addEventHandler("onerror", this.FileList_onerror , this);
        
		//VirtualFile 에 로드된 파일을 조건에 맞게 오픈하는 메소드
		//VirtualFile.open( strFileName ,constOptions )
		//strFileName : FileUpload, FileUpTransfer, FileDialog 또는 Drag&Drop 으로 전달된 VirtualFile 오브젝트일 때만 strFileName 파라미터값을 null 또는 빈값으로 설정가능
		//constOptions : openRead(읽기전용), openWrite(쓰기전용), openAppend(이어쓰기 전용), openCreate(파일생성전용), openText(텍스트모드), openBinary(이진모드) 
        vFile.open(null, VirtualFile.openRead);
    }
	
}

/**
* 파일 추가 성공한 경우
*/
this.FileList_onsuccess = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileEventInfo)
{
	//console.dir(e);//nexacro.VirtualFileEventInfo
	//console.dir(obj);//nexacro.VirtualFile
	
	//VirtualFileEventInfo.reason : 이벤트가 발생한 원인의 코드값을 정수로 갖는 읽기전용 속성
    switch (e.reason)
    {
        case 1:
			//e.reason=1 : open() 메소드가 수행되었을 때
			//VirtualFile 에 오픈된 파일의 크기를 조회후, 조회에 성공여부를 반환 
            obj.getFileSize(); //true
            break;
		case 9:
			//e.reason=9 : getFileSize() 메소드가 수행되었을 때
			// VirtualFileEventInfo 오브젝트의 filesize 속성에 읽어들인 데이터가 저장
		
			//FileUpTransfer00에 파일 저장
			//FileUpTransfer.addFile( strID, objVFile )
			//stdID : 파일 업로드시 name값으로 사용함.
			//objVFile : filelist 속성에 추가 할 파일정보를 VirtualFile 오브젝트
            //this.FileUpTransfer00.addFile(obj.filename, obj);
			this.FileUpTransfer00.addFile('upFile', obj);
            break;
    }
}

/**
* 파일 추가 실패한 경우
*/
this.FileList_onerror = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileErrorEventInfo)
{
    trace("errortype: "+e.errortype);
    trace("errormsg: "+e.errormsg);
    trace("statuscode: "+e.statuscode);
}

/**
* FileUpTransfer00.upload 함수
* 
* onprogress
* onsuccess
* onerror
*/
this.uploadFiles = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
    //this.FileUpTransfer00.upload('http://demo.nexacro.com/developer_guide/17/Service/fileupload.jsp');
	this.FileUpTransfer00.upload('http://localhost:9090/nxcr/fileupload.jsp');//commons-fileupload 라이브러지 사용버젼
};

this.FileUpTransfer00_onprogress = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferProgressEventInfo)
{
    trace("onprogress : "  + e.loaded+"/"+e.total); //384103/384103
};

this.FileUpTransfer00_onsuccess = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferEventinfo)
{
    trace("onsuccess : "  + e.code);	// 0 
    trace("onsuccess : "  + e.message);	// Success
	
	
	console.dir(e);	//nexacro.FileUpTransferEventInfo 
	console.dir(e.datasets);	//nexacro.Dataset 배열
	
	var ds = e.datasets[0];
	var fileName = ds.getColumn(0, 'fileName');//저장된 파일명
	console.dir(ds);
	console.dir(ds._rawRecords[0]);//["upFile", "jang_yoon_ju.jpg", "31201", "image/jpeg"]
};

this.FileUpTransfer00_onerror = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferErrorEventInfo)
{
    trace(e.errormsg);
    trace(e.statuscode);
};


]]></Script>
  </Form>
</FDL>
